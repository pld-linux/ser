#!/bin/sh
#
# ser		This shell script takes care of starting and stopping ser
#
# chkconfig:	2345 20 80
# description:	ser
# processname:	ser

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
if is_yes "${NETWORKING}"; then
	if [ ! -f /var/lock/subsys/network -a "$1" != stop -a "$1" != status ]; then
		msg_network_down ser
		exit 1
	fi
else
	exit 0
fi

RETVAL=0
# See how we were called.
case "$1" in
  start)
	# Start daemons.
	if [ ! -f /var/lock/subsys/ser ]; then
		msg_starting ser
		daemon ser
		RETVAL=$?
		[ $RETVAL -eq 0 ] && touch /var/lock/subsys/ser
	else
		msg_already_running ser
	fi
	;;
  stop)
	# Stop daemons.
	if [ -f /var/lock/subsys/ser ]; then
		msg_stopping ser
		killproc ser
		rm -f /var/lock/subsys/ser >/dev/null 2>&1
	else
		msg_not_running ser
	fi
	;;
  restart|force-reload)
	$0 stop
	$0 start
	exit $?
	;;
  status)
	status ser
	exit $?
	;;
  *)
	msg_usage "$0 {start|stop|restart|force-reload|status}"
	exit 3
esac

exit $RETVAL
